AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Travel AI Platform API and Functions
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    MemorySize: 256
    Environment:
      Variables:
        TRAVEL_PLANS_TABLE:
          Fn::ImportValue: TravelAI-TravelPlansTableName
        MEDIA_BUCKET:
          Fn::ImportValue: TravelAI-MediaBucketName
        FRONTEND_URL: http://localhost:3000
        USER_POOL_ID:
          Fn::ImportValue: TravelAI-UserPoolId
        OPENAI_API_KEY_PARAM: /travel-ai/openai-api-key
Resources:
  TravelApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: '''GET, POST, PUT, DELETE, OPTIONS'''
        AllowHeaders: '''Content-Type,Authorization'''
        AllowOrigin: '''*'''
      Auth:
        ApiKeyRequired: false
  AuthCallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AuthCallbackFunction
      Handler: auth-callback.handler
      Policies:
      - AmazonCognitoReadOnly
      Events:
        AuthCallback:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /auth/callback
            Method: get
    Metadata:
      SamResourceId: AuthCallbackFunction
  AuthTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AuthTokenFunction
      Handler: auth-token.handler
      Policies:
      - AmazonCognitoReadOnly
      Events:
        AuthToken:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /api/auth/token
            Method: get
    Metadata:
      SamResourceId: AuthTokenFunction
  PostConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: PostConfirmationFunction
      Handler: post-confirmation.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Fn::ImportValue: TravelAI-TravelPlansTableName
    Metadata:
      SamResourceId: PostConfirmationFunction
  CreateTravelPlanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateTravelPlanFunction
      Handler: create.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Fn::ImportValue: TravelAI-TravelPlansTableName
      - SSMParameterReadPolicy:
          ParameterName: /travel-ai/openai-api-key
      Events:
        CreateTravelPlan:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /api/travel/plan
            Method: post
    Metadata:
      SamResourceId: CreateTravelPlanFunction
  GetTravelPlanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetTravelPlanFunction
      Handler: get.handler
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Fn::ImportValue: TravelAI-TravelPlansTableName
      - SSMParameterReadPolicy:
          ParameterName: /travel-ai/openai-api-key
      Events:
        GetTravelPlan:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /api/travel/plan/{id}
            Method: get
    Metadata:
      SamResourceId: GetTravelPlanFunction
  ListUserPlansFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ListUserPlansFunction
      Handler: list.handler
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Fn::ImportValue: TravelAI-TravelPlansTableName
      - SSMParameterReadPolicy:
          ParameterName: /travel-ai/openai-api-key
      Events:
        ListUserPlans:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /api/travel/user-plans
            Method: get
    Metadata:
      SamResourceId: ListUserPlansFunction
  ShareTravelPlanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ShareTravelPlanFunction
      Handler: share.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Fn::ImportValue: TravelAI-TravelPlansTableName
      - SSMParameterReadPolicy:
          ParameterName: /travel-ai/openai-api-key
      Events:
        ShareTravelPlan:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /api/travel/plan/{id}/share
            Method: post
    Metadata:
      SamResourceId: ShareTravelPlanFunction
  ImageSearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ImageSearchFunction
      Handler: search.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Fn::ImportValue: TravelAI-TravelPlansTableName
      - S3CrudPolicy:
          BucketName:
            Fn::ImportValue: TravelAI-MediaBucketName
      - Statement:
        - Effect: Allow
          Action:
          - rekognition:DetectLabels
          - rekognition:RecognizeCelebrities
          Resource: '*'
      - SSMParameterReadPolicy:
          ParameterName: /travel-ai/openai-api-key
      Events:
        ImageSearch:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /api/travel/image-search
            Method: post
    Metadata:
      SamResourceId: ImageSearchFunction
  UpdateTravelPlanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateTravelPlanFunction
      Handler: update.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Fn::ImportValue: TravelAI-TravelPlansTableName
      - SSMParameterReadPolicy:
          ParameterName: /travel-ai/openai-api-key
      Events:
        UpdateTravelPlan:
          Type: Api
          Properties:
            RestApiId:
              Ref: TravelApi
            Path: /api/travel/plan/{id}
            Method: put
    Metadata:
      SamResourceId: UpdateTravelPlanFunction
Outputs:
  TravelApi:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${TravelApi}.execute-api.${AWS::Region}.amazonaws.com/prod/
